plugins {
	id 'org.springframework.boot' version '2.2.7.RELEASE'
	id 'io.spring.dependency-management' version '1.0.9.RELEASE'
	id 'java'
	id 'jacoco'
	id "org.sonarqube" version "4.0.0.2929"
}

group = 'com.vr2.2'
version = '0.0.1-SNAPSHOT'
sourceCompatibility = '11'

configurations {
	compileOnly {
		extendsFrom annotationProcessor
	}
}

repositories {
	mavenCentral()
//	Videoready jfrog repo
	maven {
		url  'https://videoready.jfrog.io/artifactory/libs-snapshot-local/'
		credentials {
			username 'videoready'
			password 'LSU3fsg%27'
		}
	}
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'
com.vr2.0:core-cloud-util:0.0.3-SNAPSHOT

 	implementation group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '6.5.0.202303070854-r'

	implementation group: 'com.amazonaws', name: 'aws-java-sdk-s3', version: '1.12.481'
	implementation 'com.vr2.2:vr-common:0.0.4-SNAPSHOT'
	implementation 'org.springframework.boot:spring-boot-starter-amqp'
	implementation 'org.springframework.boot:spring-boot-starter-data-mongodb'
	implementation group: 'com.google.code.gson', name: 'gson', version: '2.10.1'
	compile 'io.springfox:springfox-swagger-ui:2.9.2'
	compile 'io.springfox:springfox-swagger2:2.9.2'
	compile 'org.springframework.boot:spring-boot-starter-mail'
	implementation 'org.springframework.boot:spring-boot-starter-mail'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-ses', version: '1.11.414'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-bom', version: '1.11.414'
	implementation group: 'com.amazonaws', name: 'aws-java-sdk-sns', version: '1.11.414'
}

tasks.named('test') {
	useJUnitPlatform()
}

bootJar{enabled = false}
jar{
	enabled = true
	baseName = 'vr-content-ingestion'
}

//Jacoco Test Report for sonar junit test coverage
test {
	finalizedBy jacocoTestReport
	testLogging {
		events "passed", "skipped", "failed"
	}
	jacoco {
		enabled = true
		destinationFile = file("$buildDir/jacoco/jacoco.exec")
	}
}

jacoco {
	toolVersion = "0.8.5"
	reportsDir = file("$buildDir/jacoco")
}

jacocoTestReport {
	dependsOn test
	reports {
		xml.enabled true
		csv.enabled false
		html.destination file("${buildDir}/jacocoHtml")
		xml.destination file("${buildDir}/reports/jacoco.xml")
	}
}
